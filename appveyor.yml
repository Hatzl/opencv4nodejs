# appveyor file
# http://www.appveyor.com/docs/appveyor-yml

platform:
  - x64

clone_folder: c:\projects\opencv4nodejs

init:
  - git config --global core.autocrlf true

# cache:
 # - c:\tools\opencv

# what combinations to test
environment:
  OPENCV3_LATEST: 3.4.16
  OPENCV4_LATEST: 4.5.4
  PYTHON_VERSION: 3.8
  PYTHON: "C:\\Python38-x64"
  # use self build
  OPENCV4NODEJS_DISABLE_AUTOBUILD: 1

  matrix:
    - nodejs_version: 16
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      OPENCV_VERSION: "%OPENCV4_LATEST%"
    # - nodejs_version: 16
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    #   OPENCV_VERSION: "%OPENCV3_LATEST%"
    # - nodejs_version: 16
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
    #   OPENCV_VERSION: "%OPENCV4_LATEST%"
    # - nodejs_version: 16
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
    #   OPENCV_VERSION: "%OPENCV4_LATEST%"
    # - nodejs_version: 16
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    #   OPENCV_VERSION: "%OPENCV4_LATEST%"
    # - nodejs_version: 16
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    #   OPENCV_VERSION: "%OPENCV4_LATEST%"
    #   BUILD_TASK: "ENVS"

install:
  - cmd: choco install OpenCV -y --version %OPENCV_VERSION%
  - if not "%BUILD_TASK%" == "ENVS" SET OPENCV_INCLUDE_DIR=c:\tools\opencv\build\include
  - if not "%BUILD_TASK%" == "ENVS" SET OPENCV_LIB_DIR=c:\tools\opencv\build\x64\vc14\lib
  - if not "%BUILD_TASK%" == "ENVS" SET OPENCV_BIN_DIR=c:\tools\opencv\build\x64\vc14\bin
  - if not "%BUILD_TASK%" == "ENVS" SET PATH=%PATH%;%OPENCV_BIN_DIR%;
  - ps: Install-Product node $env:nodejs_version x64
  - node --version

build: off

test_script:
  - node --version
  #- npm install -g pnpm
  #- if "%BUILD_TASK%" == "ENVS" (
  #    cd c:\projects\opencv4nodejs\ci\envs &&
  #    pnpm install &&
  #    pnpm test
  #  ) else (
  #    cd c:\projects\opencv4nodejs &&
  #    pnpm install &&
  #    cd c:\projects\opencv4nodejs\test &&
  #    pnpm install &&
  #    pnpm run test-appveyor &&
  #    pnpm run test-externalMemTracking
  #  )